// ‚úÖ Supabase —á–µ—Ä–µ–∑ CDN
const supabaseUrl = 'https://hubrgeitdvodttderspj.supabase.co';
const supabaseKey = '—Ç–≤–æ–π_–∫–ª—é—á'; // üîÅ –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –∫–ª—é—á!
const supabase = window.supabase.createClient(supabaseUrl, supabaseKey);

// ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è session_id
const sessionId = localStorage.getItem("session_id") || crypto.randomUUID();
localStorage.setItem("session_id", sessionId);

// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
window._telegramId = null;
window._appLang = localStorage.getItem("lang") || "ru";

// ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è showTab
window.showTab = function (id) {
  document.querySelectorAll('.tab').forEach(tab => {
    tab.classList.remove('active');
    tab.classList.add('hidden');
  });

  const selectedTab = document.getElementById(id);
  if (selectedTab) {
    selectedTab.classList.remove('hidden');
    selectedTab.classList.add('active');
  }

  document.querySelectorAll('.tab-btn').forEach(btn => btn.classList.remove('bg-blue-100'));
  const activeBtn = document.querySelector(`.tab-btn[onclick*="${id}"]`);
  activeBtn?.classList.add('bg-blue-100');

  localStorage.setItem("activeTab", id);
  trackEvent("–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏", id);
};

// ‚úÖ –ü–µ—Ä–µ–≤–æ–¥—ã
const translations = {
  ru: {
    flights: "‚úàÔ∏è –ê–≤–∏–∞–±–∏–ª–µ—Ç—ã",
    hotels: "üè® –û—Ç–µ–ª–∏",
    sights: "üåç –ú–µ—Å—Ç–∞",
    findFlights: "–ù–∞–π—Ç–∏ —Ä–µ–π—Å—ã",
    roundTrip: "–¢—É–¥–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ",
    departure: "–î–∞—Ç–∞ –≤—ã–ª–µ—Ç–∞",
    return: "–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è",
    hotelResults: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:",
    noHotelsFound: "–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.",
    hotelFilters: "üîé –§–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞",
    city: "–ì–æ—Ä–æ–¥",
    guests: "–ì–æ—Å—Ç–µ–π",
    checkIn: "–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞",
    checkOut: "–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞",
    priceFrom: "–¶–µ–Ω–∞ –æ—Ç",
    priceTo: "–¶–µ–Ω–∞ –¥–æ",
    ratingMin: "–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥",
    findHotel: "–ù–∞–π—Ç–∏ –æ—Ç–µ–ª—å",
    bookNow: "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"
  },
  en: {
    flights: "‚úàÔ∏è Flights",
    hotels: "üè® Hotels",
    sights: "üåç Places",
    findFlights: "Search Flights",
    roundTrip: "Round Trip",
    departure: "Departure Date",
    return: "Return Date",
    hotelResults: "Results:",
    noHotelsFound: "Nothing found for the selected filters.",
    hotelFilters: "üîé Search Filters",
    city: "City",
    guests: "Guests",
    checkIn: "Check-in Date",
    checkOut: "Check-out Date",
    priceFrom: "Price from",
    priceTo: "Price to",
    ratingMin: "Min Rating",
    findHotel: "Find Hotel",
    bookNow: "Book Now"
  }
};

// ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
function logEventToAnalytics(eventName, eventData = {}) {
  const userId = window._telegramId;
  if (!userId) {
    console.warn("‚ö†Ô∏è –ù–µ—Ç Telegram ID ‚Äî –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ –∑–∞–ø–∏—Å–∞–Ω–∞");
    return;
  }

  const payload = {
    telegram_id: userId.toString(),
    event: eventName,
    event_data: eventData,
    session_id: sessionId,
    created_at: new Date().toISOString(),
  };

  supabase.from('analytics').insert([payload])
    .then(({ error }) => {
      if (error) {
        console.error("‚ùå Supabase insert error:", error.message);
      } else {
        console.log("‚úÖ –°–æ–±—ã—Ç–∏–µ –∑–∞–ø–∏—Å–∞–Ω–æ:", eventName);
      }
    });
}

// ‚úÖ –¢—Ä–µ–∫–µ—Ä —Å–æ–±—ã—Ç–∏–π
function trackEvent(name, data = "") {
  const message = `üìà –°–æ–±—ã—Ç–∏–µ: ${name}` + (data ? `\n‚û°Ô∏è ${typeof data === "string" ? data : JSON.stringify(data)}` : "");
  console.log(message);
  Telegram.WebApp.sendData?.(message);
  logEventToAnalytics(name, {
    info: data,
    lang: window._appLang,
    activeTab: localStorage.getItem("activeTab") || "flights",
    timestamp: new Date().toISOString(),
  });
}

// ‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫
document.addEventListener("DOMContentLoaded", () => {
  if (window.Telegram && Telegram.WebApp) {
    Telegram.WebApp.ready();
    const userId = Telegram.WebApp.initDataUnsafe?.user?.id;
    console.log("üîç initDataUnsafe:", Telegram.WebApp.initDataUnsafe);

    if (!userId) {
      console.warn("‚ùå –ù–µ—Ç Telegram ID ‚Äî —Å–æ–±—ã—Ç–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è");
      return;
    }

    window._telegramId = userId;
    window._appLang = localStorage.getItem("lang") || "ru";

    console.log("üë§ Telegram ID:", userId);

    applyTranslations(window._appLang);
    trackEvent("–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", {
      lang: window._appLang,
      timestamp: new Date().toISOString(),
    });
  }

  // üî§ –ü–µ—Ä–µ–≤–æ–¥
  document.getElementById("langSwitcher").value = window._appLang;
  document.getElementById("langSwitcher").addEventListener("change", (e) => {
    window._appLang = e.target.value;
    localStorage.setItem("lang", window._appLang);
    applyTranslations(window._appLang);
    trackEvent("–°–º–µ–Ω–∞ —è–∑—ã–∫–∞", window._appLang);
  });

  // ‚úàÔ∏è –ì–æ—Ä—è—á–∏–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è
  const hotDealsContainer = document.getElementById("hotDeals");
  if (hotDealsContainer) {
    supabase.from("go_travel").select("*")
      .then(({ data, error }) => {
        if (error) throw error;

        const t = translations[window._appLang];
        hotDealsContainer.innerHTML = data.map((deal) => `
          <div class="bg-white p-4 rounded-xl shadow">
            ‚úàÔ∏è <strong>${deal.from}</strong> ‚Üí <strong>${deal.to}</strong><br>
            üìÖ ${deal.date}<br>
            <span class="text-red-600 font-semibold">$${deal.price}</span><br>
            <button class="btn mt-2 w-full" onclick="bookFlight('${deal.from}', '${deal.to}', '${deal.date}', ${deal.price})">${t.bookNow}</button>
          </div>
        `).join("");
      })
      .catch(err => {
        console.error("–û—à–∏–±–∫–∞ Supabase:", err.message);
        hotDealsContainer.innerHTML = "<p class='text-sm text-red-500'>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–π—Å–æ–≤.</p>";
      });
  }

  // üìÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ round-trip
  document.getElementById("roundTrip")?.addEventListener("change", function () {
    const wrapper = document.getElementById("returnDateWrapper");
    const input = document.getElementById("returnDate");
    wrapper.classList.toggle("hidden", !this.checked);
    input.required = this.checked;
    if (!this.checked) input.value = "";
  });

  // üîç –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π
  document.getElementById("hotelForm")?.addEventListener("submit", (e) => {
    e.preventDefault();
    showLoading();

    const city = document.getElementById("hotelCity").value.trim();
    const minPrice = parseFloat(document.getElementById("minPrice").value) || 0;
    const maxPrice = parseFloat(document.getElementById("maxPrice").value) || Infinity;
    const minRating = parseFloat(document.getElementById("minRating").value) || 0;

    fetch("http://localhost:3000/api/hotels")
      .then(res => res.json())
      .then(hotels => {
        const filtered = hotels.filter(h =>
          h.price >= minPrice &&
          h.price <= maxPrice &&
          h.rating >= minRating &&
          (!city || h.city.toLowerCase().includes(city.toLowerCase()))
        );

        const t = translations[window._appLang];
        const resultBlock = document.getElementById("hotelsResult");
        resultBlock.classList.remove("visible");

        resultBlock.innerHTML = `<h3 class='font-semibold mb-2'>${t.hotelResults}</h3>` + (
          filtered.length ? filtered.map(hotel => `
            <div class="card bg-white border p-4 rounded-xl mb-2">
              <strong>${hotel.name}</strong> (${hotel.city})<br>
              –¶–µ–Ω–∞: $${hotel.price} / –Ω–æ—á—å<br>
              –†–µ–π—Ç–∏–Ω–≥: ${hotel.rating}<br>
              <button class="btn mt-2 w-full" onclick="bookHotel('${hotel.name}', '${hotel.city}', ${hotel.price}, ${hotel.rating})">${t.bookNow}</button>
            </div>`).join("") :
          `<p class='text-sm text-gray-500'>${t.noHotelsFound}</p>`
        );

        setTimeout(() => resultBlock.classList.add("visible"), 50);
        trackEvent("–ü–æ–∏—Å–∫ –æ—Ç–µ–ª—è", `–ì–æ—Ä–æ–¥: ${city}, –¶–µ–Ω–∞: $${minPrice}‚Äì${maxPrice}, –†–µ–π—Ç–∏–Ω–≥: –æ—Ç ${minRating}`);
        hideLoading();
      })
      .catch(err => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–µ–ª–µ–π:", err);
        document.getElementById("hotelsResult").innerHTML = "<p class='text-sm text-red-500'>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç–µ–ª–µ–π.</p>";
        hideLoading();
      });
  });

  // ‚úàÔ∏è –ü–æ–∏—Å–∫ —Ä–µ–π—Å–æ–≤
  document.getElementById("search-form")?.addEventListener("submit", (e) => {
    e.preventDefault();
    const from = e.target.from.value.trim();
    const to = e.target.to.value.trim();
    const departureDate = e.target.departureDate.value;

    const msg = `‚úàÔ∏è –õ—É—á—à–∏–π —Ä–µ–π—Å\nüõ´ ${from} ‚Üí üõ¨ ${to}\nüìÖ ${departureDate}\nüí∞ $99`;
    Telegram.WebApp.sendData?.(msg);
    trackEvent("–ü–æ–∏—Å–∫ —Ä–µ–π—Å–∞", `–ò–∑: ${from} ‚Üí –í: ${to}, –î–∞—Ç–∞: ${departureDate}`);
  });
});

// ‚õë –ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
window.onerror = function (msg, url, line, col, error) {
  logEventToAnalytics("–û—à–∏–±–∫–∞ JS", {
    msg, url, line, col, stack: error?.stack || null
  });
};

// üïì –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
const appStart = Date.now();
window.addEventListener("beforeunload", () => {
  const duration = Math.round((Date.now() - appStart) / 1000);
  logEventToAnalytics("–°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞", { duration_seconds: duration });
});

// üîÑ Loader
function showLoading() {
  document.getElementById("loadingSpinner")?.classList.remove("hidden");
}

function hideLoading() {
  document.getElementById("loadingSpinner")?.classList.add("hidden");
}
